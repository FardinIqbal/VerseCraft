// ---------------------------------------------------------------
// VerseCraft Design System - Themes
// ---------------------------------------------------------------
// Description: VerseCraft Visual Themes
// These distinct visual themes, inspired by natural and literary
// imagery, bring elegance and accessibility to the interface.
// Select from "Daylight," "Midnight," and "Clarity" to evoke
// different atmospheres while preserving readability.
// Created by: [Your Name]
// Version: 1.0
// Last Updated: [Date]
// ---------------------------------------------------------------

@use "sass:map";
@use "base/variables" as *;
@use "shared"; // Import reusable styles for consistent theme handling

// Default Theme Selection
$default-theme: 'daylight'; // Options: 'daylight', 'midnight', 'clarity'

// ---------------------------------------------------------------
// Theme Variables and Mixins
// ---------------------------------------------------------------

/// Daylight Theme Mixin - Light, bright tones for readability in well-lit environments
@mixin daylight {
  --background-primary: #{map.get(map.get($color-schemes, 'light'), 'background', 'primary')};
  --background-secondary: #{map.get(map.get($color-schemes, 'light'), 'background', 'secondary')};
  --background-tertiary: #{map.get(map.get($color-schemes, 'light'), 'background', 'tertiary')};
  --text-primary: #{map.get(map.get($color-schemes, 'light'), 'text', 'primary')};
  --text-secondary: #{map.get(map.get($color-schemes, 'light'), 'text', 'secondary')};
  --text-tertiary: #{map.get(map.get($color-schemes, 'light'), 'text', 'tertiary')};
  --border-primary: #{map.get(map.get($color-schemes, 'light'), 'border', 'primary')};
  --accent-primary: #{map.get(map.get($color-schemes, 'light'), 'accent', 'primary')};
  // Additional Daylight theme variables as needed
}

/// Midnight Theme Mixin - Dark, muted tones for reduced eye strain in low light
@mixin midnight {
  --background-primary: #{map.get(map.get($color-schemes, 'dark'), 'background', 'primary')};
  --background-secondary: #{map.get(map.get($color-schemes, 'dark'), 'background', 'secondary')};
  --background-tertiary: #{map.get(map.get($color-schemes, 'dark'), 'background', 'tertiary')};
  --text-primary: #{map.get(map.get($color-schemes, 'dark'), 'text', 'primary')};
  --text-secondary: #{map.get(map.get($color-schemes, 'dark'), 'text', 'secondary')};
  --text-tertiary: #{map.get(map.get($color-schemes, 'dark'), 'text', 'tertiary')};
  --border-primary: #{map.get(map.get($color-schemes, 'dark'), 'border', 'primary')};
  --accent-primary: #{map.get(map.get($color-schemes, 'dark'), 'accent', 'primary')};
  // Additional Midnight theme variables as needed
}

/// Clarity Theme Mixin - High-contrast tones for enhanced accessibility
@mixin clarity {
  --background-primary: #000000;  // True black for maximum contrast
  --background-secondary: #FFFFFF; // True white for high contrast
  --background-tertiary: #DDDDDD;  // Light gray for softened contrast
  --text-primary: #FFFFFF;         // White text on black background
  --text-secondary: #000000;       // Black text on white background
  --text-tertiary: #333333;        // Dark gray for additional clarity
  --border-primary: #333333;       // Dark gray border for high contrast
  --accent-primary: #FF0000;       // High-visibility red for accents
  // Additional Clarity theme variables for accessibility
}

// ---------------------------------------------------------------
// Theme Application Mixin
// ---------------------------------------------------------------

/// Mixin to Apply Selected Theme
/// @param {String} $theme - The theme to apply ('daylight', 'midnight', or 'clarity')
@mixin apply-theme($theme) {
  @if $theme == 'daylight' {
    @include daylight;
  } @else if $theme == 'midnight' {
    @include midnight;
  } @else if $theme == 'clarity' {
    @include clarity;
  }
}

// Apply Default Theme to the `body`
body {
  @include apply-theme($default-theme);
}

// Optionally, use `shared` utility for high contrast handling if the user preference is detected
@mixin theme-preference($theme) {
  @include apply-theme($theme);

  @media (prefers-color-scheme: dark) {
    @include midnight;
  }
}

// In _mixins.scss
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// ---------------------------------------------------------------
// Typography Mixins
// ---------------------------------------------------------------

/// Font Style Mixin
/// @param {String} $size - Font size key from $type-scale (e.g., 'base', 'lg')
/// @param {Number} $weight - Font weight (e.g., 400, 700)
/// @param {String} $line-height - Line height key from $line-heights (e.g., 'base', 'prose')
/// @param {String} $font-family - Font family key from $fonts (e.g., 'primary', 'display')
@mixin font-style($size, $weight, $line-height, $font-family) {
  font-size: map.get($type-scale, $size);
  font-weight: $weight;
  line-height: map.get($line-heights, $line-height);
  font-family: map.get(map.get($fonts, $font-family), 'family');
}

/// Meta Text Mixin
/// Applies a smaller font style, often used for metadata
@mixin meta-text {
  font-size: map.get($type-scale, '2xs');
  font-weight: 400;
  line-height: map.get($line-heights, 'tight');
  color: map.get(map.get($colors, 'ink'), 'medium');
}

/// Poetry Text Mixin
/// Specialized styling for poetry or verse
/// @param {String} $size - Font size key from $type-scale for poetry (e.g., 'lg')
@mixin poetry-text($size) {
  font-size: map.get($type-scale, $size);
  line-height: map.get($line-heights, 'verse');
  font-family: map.get(map.get($fonts, 'primary'), 'family');
  font-style: italic;
}

// ---------------------------------------------------------------
// Focus Ring Mixin
// Provides a consistent and accessible focus ring for interactive elements.
// ---------------------------------------------------------------

@mixin focus-ring {
  outline: none; // Remove default outline for consistent styling
  box-shadow: 0 0 0 2px map.get(map.get($colors, 'editorial'), 'light'),
  0 0 0 4px map.get(map.get($colors, 'ink'), 'deepest');
  border-radius: 4px;

  @include reduced-motion {
    transition: none;
  }

  &:focus-visible {
    box-shadow: 0 0 0 2px map.get(map.get($colors, 'editorial'), 'base'),
    0 0 0 4px map.get(map.get($colors, 'ink'), 'darkest');
  }
}


